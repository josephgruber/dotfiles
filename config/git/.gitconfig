[branch]
    autosetupmerge = always
    autosetuprebase = always
    sort = -committerdate
[color]
    ui = auto
[column]
    ui = auto
[commit]
    gpgsign = true
    verbose = true
[core]
    autocrlf = input
    editor = code --new-window --wait
    excludesfile = ~/.gitignore
    fsmonitor = true
    pager = less -FMRiX
    untrackedCache = true
[credential]
    helper = cache --timeout=86400
[diff]
    algorithm = histogram
    colorMoved = true
    mnemonicPrefix = true
    renames = true
    tool = vscode
[difftool "vscode"]
    cmd = code --new-window --wait --diff $LOCAL $REMOTE
[feature]
    experimental = true
[fetch]
    all = true
    parallel = 5
    prune = true
    prunetags = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[gc]
    auto = 256
[gpg]
    format = ssh
[gpg "ssh"]
    program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
[help]
    autocorrect = prompt
[init]
    defaultBranch = main
    templatedir = ~/.git_templates
[merge]
    autostash = true
    conflictStyle = zdiff3
    tool = vscode
[mergetool "vscode"]
    cmd = code --new-window --wait $MERGED
[pull]
    rebase = true
[push]
    autoSetupRemote = true
	default = current
    followTags = true
[status]
    short = false
[rebase]
    autostash = true
    autosquash = true
    updateRefs = true
[rerere]
    autoupdate = true
    enabled = true
[tag]
    sort = version:refname
[user]
    name = Joseph Gruber
[alias]
	authors = !git log --format='%aN <%aE>' | sort -u --ignore-case
    conflicts = diff --name-only --diff-filter=U
    dag = log --graph --format='format: %C(yellow)%h%C(reset) %C(blue)%an <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
    delete-merged = !git fetch && git branch --merged | egrep -v 'master' | xargs git branch -d
    delete-local = !git branch | grep -v 'main' | xargs git branch -D
    last = log -1 HEAD
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    lg = log --color --graph --pretty='format: %C(red)%h%C(reset) %C(yellow)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)' --abbrev-commit
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    local-branches = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    publish = !git checkout -b $1 && git push -u origin
    recent-branches = !git branch --sort=-committerdate | head
    tfo = "!f() { git checkout -b emergency-exit && git add -A && git commit -m 'Emergency exit'  && git push origin head -u; }; f"
[include]
    path = ~/.dotfiles/.local/.gitconfig
